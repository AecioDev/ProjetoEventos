{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass EventosComponent {\n  //Para utilizar conexão com o banco de dados vamos fazer uma referencia ao HTTP Client injetado pelo construtor\n  //Para isso temos que lembrar de infromar no app-modules a importação do HTTP Client.\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.getEventos();\n  }\n  getEventos() {\n    //Forma Manual de mandar os dados:\n    /*\n    this.eventos = [\n      {\n        Tema: 'Angular',\n        Local: 'Campo Grande',\n      },\n      {\n        Tema: 'Angular e Suas Novidades',\n        Local: 'São Paulo',\n      },\n      {\n        Tema: 'SQL Server ao vivo',\n        Local: 'Curitiba',\n      },\n    ];\n    */\n    //Forma automática de buscar os dados do Banco de Dados por meio da API\n    this.http.get('https://localhost:5001/api/eventos').subscribe(\n    //esse subscrive se comporta como um CallBack retornando a resposta do consumo da api\n    //Utilizamos 2 propriedades principais\n    //esse subscrive se comporta como um CallBack retornando a resposta do consumo da api\n    response => this.eventos = response, error => console.log(error));\n  }\n}\nEventosComponent.ɵfac = function EventosComponent_Factory(t) {\n  return new (t || EventosComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nEventosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EventosComponent,\n  selectors: [[\"app-eventos\"]],\n  decls: 8,\n  vars: 0,\n  consts: [[\"action\", \"\", 1, \"form-inline\"], [1, \"form\", \"group\", \"mb-2\"], [1, \"btn\", \"btn-outline-success\"]],\n  template: function EventosComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Eventos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"hr\");\n      i0.ɵɵelementStart(3, \"form\", 0)(4, \"div\", 1);\n      i0.ɵɵtext(5, \" () (\");\n      i0.ɵɵelement(6, \"button\", 2);\n      i0.ɵɵtext(7, \") \");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EventosComponent };","map":{"version":3,"names":["EventosComponent","constructor","http","ngOnInit","getEventos","get","subscribe","response","eventos","error","console","log","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","EventosComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\CsharpUdemi\\ProjetoCurso\\Front\\ProjetoCurso-App\\src\\app\\eventos\\eventos.component.ts","D:\\CsharpUdemi\\ProjetoCurso\\Front\\ProjetoCurso-App\\src\\app\\eventos\\eventos.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss'],\n})\nexport class EventosComponent implements OnInit {\n\n  public eventos: any;\n\n  //Para utilizar conexão com o banco de dados vamos fazer uma referencia ao HTTP Client injetado pelo construtor\n  //Para isso temos que lembrar de infromar no app-modules a importação do HTTP Client.\n\n  constructor(private http:HttpClient) {}\n\n  ngOnInit() {\n    this.getEventos();\n  }\n\n  public getEventos(): void {\n\n    //Forma Manual de mandar os dados:\n    /*\n    this.eventos = [\n      {\n        Tema: 'Angular',\n        Local: 'Campo Grande',\n      },\n      {\n        Tema: 'Angular e Suas Novidades',\n        Local: 'São Paulo',\n      },\n      {\n        Tema: 'SQL Server ao vivo',\n        Local: 'Curitiba',\n      },\n    ];\n    */\n\n    //Forma automática de buscar os dados do Banco de Dados por meio da API\n    this.http.get('https://localhost:5001/api/eventos').subscribe( //esse subscrive se comporta como um CallBack retornando a resposta do consumo da api\n      //Utilizamos 2 propriedades principais\n      response => this.eventos = response,\n      error => console.log(error),\n    );\n\n    \n\n  }\n}\n","<h2>Eventos</h2>\n<hr>\n\n<form action=\"\" class=\"form-inline\">\n  <div class=\"form group mb-2\">\n    ()\n    (<button class=\"btn btn-outline-success\"></button>)\n  </div>\n</form>\n\n"],"mappings":";;AAGA,MAKaA,gBAAgB;EAI3B;EACA;EAEAC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEOA,UAAUA,CAAA;IAEf;IACA;;;;;;;;;;;;;;;;IAiBA;IACA,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS;IAAE;IAC7D;IACA;IAAAC,QAAQ,IAAI,IAAI,CAACC,OAAO,GAAGD,QAAQ,EACnCE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;EAIH;;AA1CWT,gBAAgB,C;mBAAhBA,gBAAgB,EAAAY,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBf,gBAAgB,C;QAAhBA,gBAAgB;EAAAgB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BV,EAAA,CAAAY,cAAA,SAAI;MAAAZ,EAAA,CAAAa,MAAA,cAAO;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAChBd,EAAA,CAAAe,SAAA,SAAI;MAEJf,EAAA,CAAAY,cAAA,cAAoC;MAEhCZ,EAAA,CAAAa,MAAA,YACC;MAAAb,EAAA,CAAAe,SAAA,gBAAiD;MAAAf,EAAA,CAAAa,MAAA,SACpD;MAAAb,EAAA,CAAAc,YAAA,EAAM;;;;;SDCK1B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}