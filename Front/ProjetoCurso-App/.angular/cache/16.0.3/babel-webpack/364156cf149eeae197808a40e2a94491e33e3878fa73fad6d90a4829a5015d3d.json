{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EventosComponent = class EventosComponent {\n  get filtroLista() {\n    return this._filtroLista;\n  }\n  set filtroLista(v) {\n    this._filtroLista = v;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n  filtrarEventos(filtrarPor) {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(evento => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1);\n  }\n  //Para utilizar conexão com o banco de dados vamos fazer uma referencia ao HTTP Client injetado pelo construtor\n  //Para isso temos que lembrar de infromar no app-modules a importação do HTTP Client.\n  constructor(http) {\n    this.http = http;\n    this.eventos = [];\n    this.eventosFiltrados = [];\n    this.larguraImg = 150;\n    this.margemImg = 2;\n    this.mostrarImg = true;\n    this._filtroLista = \"\";\n  }\n  ngOnInit() {\n    this.getEventos();\n  }\n  verImagem() {\n    this.mostrarImg = !this.mostrarImg;\n  }\n  getEventos() {\n    //Forma automática de buscar os dados do Banco de Dados por meio da API\n    this.http.get('https://localhost:5001/api/eventos').subscribe({\n      //Utilizamos 2 propriedades principais\n      next: v => {\n        this.eventos = v;\n        this.eventosFiltrados = this.eventos;\n      },\n      error: e => console.error(e),\n      complete: () => console.info('complete')\n      //response => this.eventos = response,\n      //error => console.log(error),\n    });\n  }\n};\n\nEventosComponent = __decorate([Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss']\n})], EventosComponent);\nexport { EventosComponent };","map":{"version":3,"names":["Component","EventosComponent","filtroLista","_filtroLista","v","eventosFiltrados","filtrarEventos","eventos","filtrarPor","toLocaleLowerCase","filter","evento","tema","indexOf","local","constructor","http","larguraImg","margemImg","mostrarImg","ngOnInit","getEventos","verImagem","get","subscribe","next","error","e","console","complete","info","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\CsharpUdemi\\ProjetoCurso\\Front\\ProjetoCurso-App\\src\\app\\eventos\\eventos.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eventos',\n  templateUrl: './eventos.component.html',\n  styleUrls: ['./eventos.component.scss'],\n})\nexport class EventosComponent implements OnInit {\n\n  public eventos: any = [];\n  public eventosFiltrados: any = [];\n\n  larguraImg:number = 150;\n  margemImg:number = 2;\n  mostrarImg:boolean = true;\n\n\n  private _filtroLista:string = \"\";\n  public get filtroLista() : string {\n    return this._filtroLista;\n  }\n  public set filtroLista(v : string) {\n    this._filtroLista = v;\n    this.eventosFiltrados = this.filtroLista ? this.filtrarEventos(this.filtroLista) : this.eventos;\n  }\n\n  filtrarEventos(filtrarPor:string): any{\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.eventos.filter(\n      (evento: { tema: string; local: string;}) => evento.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 ||\n      evento.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n    )\n  }\n\n\n  //Para utilizar conexão com o banco de dados vamos fazer uma referencia ao HTTP Client injetado pelo construtor\n  //Para isso temos que lembrar de infromar no app-modules a importação do HTTP Client.\n\n  constructor(private http:HttpClient) {}\n\n  ngOnInit() {\n    this.getEventos();\n  }\n\n  verImagem():void {\n    this.mostrarImg = !this.mostrarImg;\n  }\n  public getEventos(): void {\n\n    //Forma automática de buscar os dados do Banco de Dados por meio da API\n    this.http.get('https://localhost:5001/api/eventos').subscribe({ //esse subscrive se comporta como um CallBack retornando a resposta do consumo da api\n      //Utilizamos 2 propriedades principais\n      next: (v) => {\n        this.eventos = v;\n        this.eventosFiltrados = this.eventos;\n      },\n      error: (e) => console.error(e),\n      complete: () => console.info('complete')\n      //response => this.eventos = response,\n      //error => console.log(error),\n    });\n\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAOjD,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAW3B,IAAWC,WAAWA,CAAA;IACpB,OAAO,IAAI,CAACC,YAAY;EAC1B;EACA,IAAWD,WAAWA,CAACE,CAAU;IAC/B,IAAI,CAACD,YAAY,GAAGC,CAAC;IACrB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,WAAW,GAAG,IAAI,CAACI,cAAc,CAAC,IAAI,CAACJ,WAAW,CAAC,GAAG,IAAI,CAACK,OAAO;EACjG;EAEAD,cAAcA,CAACE,UAAiB;IAC9BA,UAAU,GAAGA,UAAU,CAACC,iBAAiB,EAAE;IAC3C,OAAO,IAAI,CAACF,OAAO,CAACG,MAAM,CACvBC,MAAuC,IAAKA,MAAM,CAACC,IAAI,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,UAAU,CAAC,KAAK,CAAC,CAAC,IACvGG,MAAM,CAACG,KAAK,CAACL,iBAAiB,EAAE,CAACI,OAAO,CAACL,UAAU,CAAC,KAAK,CAAC,CAAC,CAC5D;EACH;EAGA;EACA;EAEAO,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IA7BjB,KAAAT,OAAO,GAAQ,EAAE;IACjB,KAAAF,gBAAgB,GAAQ,EAAE;IAEjC,KAAAY,UAAU,GAAU,GAAG;IACvB,KAAAC,SAAS,GAAU,CAAC;IACpB,KAAAC,UAAU,GAAW,IAAI;IAGjB,KAAAhB,YAAY,GAAU,EAAE;EAqBM;EAEtCiB,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,SAASA,CAAA;IACP,IAAI,CAACH,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EACOE,UAAUA,CAAA;IAEf;IACA,IAAI,CAACL,IAAI,CAACO,GAAG,CAAC,oCAAoC,CAAC,CAACC,SAAS,CAAC;MAC5D;MACAC,IAAI,EAAGrB,CAAC,IAAI;QACV,IAAI,CAACG,OAAO,GAAGH,CAAC;QAChB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACE,OAAO;MACtC,CAAC;MACDmB,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC,CAAC;MAC9BE,QAAQ,EAAEA,CAAA,KAAMD,OAAO,CAACE,IAAI,CAAC,UAAU;MACvC;MACA;KACD,CAAC;EAEJ;CACD;;AAxDY7B,gBAAgB,GAAA8B,UAAA,EAL5B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWjC,gBAAgB,CAwD5B;SAxDYA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}